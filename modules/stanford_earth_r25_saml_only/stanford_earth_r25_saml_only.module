<?php

/**
 * @file
 * Implements Drupal hooks for stanford_earth_r25_saml_only module.
 */

/**
 * Implements hook_form_alter().
 *
 * @param array $form
 *   The Drupal form definition array.
 * @param array $form_state
 *   The Drupal form_state array.
 * @param string $form_id
 *   The Drupal form_id string.
 */
function stanford_earth_r25_saml_only_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id === 'stanford_earth_r25_location_add_form' ||
    $form_id === 'stanford_earth_r25_location_edit_form') {
    $location = $form_state->getFormObject()->getEntity();
    // Allow SAML-authenticated users without Drupal accounts to view room.
    $form['advanced']['allow_non_drupal_saml_users_view'] = [
      '#type' => 'checkbox',
      '#title' => t('Allow Authenticated non-Drupal Users to View Room'),
      '#return_value' => 1,
      '#default_value' => $location->getThirdPartySetting('stanford_earth_r25_saml_only','allow_non_drupal_saml_users_view', null),
      '#description' => t('Allow SAML-authenticated users without Drupal accounts to view room.'),
    ];
    // Allow SAML-authenticated users without Drupal accounts to book room.
    $form['advanced']['allow_non_drupal_saml_users_book'] = [
      '#type' => 'checkbox',
      '#title' => t('Allow Authenticated non-Drupal Users to Book Room'),
      '#return_value' => 1,
      '#default_value' => $location->getThirdPartySetting('stanford_earth_r25_saml_only','allow_non_drupal_saml_users_book', null),
      '#description' => t('Allow SAML-authenticated users without Drupal accounts to book room.'),
    ];
    $form['#entity_builders'][] = 'stanford_earth_r25_saml_only_add_form_builder';
  }
}

/**
 * Entity builder for the R25 Location configuration entity.
 */
function stanford_earth_r25_saml_only_add_form_builder(
  $entity_type,
  Drupal\stanford_earth_r25\Entity\StanfordEarthR25Location $location,
  &$form,
  \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($form_state->getValue('allow_non_drupal_saml_users_view')) {
    $location->setThirdPartySetting(
      'stanford_earth_r25_saml_only',
      'allow_non_drupal_saml_users_view',
      $form_state->getValue('allow_non_drupal_saml_users_view')
    );
  }
  else {
    $location->unsetThirdPartySetting('stanford_earth_r25_saml_only', 'allow_non_drupal_saml_users_view');
  }
  if ($form_state->getValue('allow_non_drupal_saml_users_book')) {
    $location->setThirdPartySetting(
      'stanford_earth_r25_saml_only',
      'allow_non_drupal_saml_users_book',
      $form_state->getValue('allow_non_drupal_saml_users_book')
    );
  }
  else {
    $location->unsetThirdPartySetting('stanford_earth_r25_saml_only', 'allow_non_drupal_saml_users_book');
  }
}

/**
 * Check if user is SAML authenticated and authenticate if not.
 */
function stanford_earth_r25_saml_only_authenticated($book = false) {
  $simplesaml = \Drupal::service('simplesamlphp_auth.manager');
  if ($simplesaml->isAuthenticated()) {
    return TRUE;
  }
  else {
    $uri = \Drupal::request()->getRequestUri();
    if (!empty($uri)) {
      $doAuth = FALSE;
      if ($book && substr($uri,0, 17) === '/r25/reservation/') {
        $doAuth = TRUE;
      }
      elseif (!$book) {
        if (substr($uri, 0, 5) === '/r25/') {
          if (substr($uri, -9, 9) === '/calendar') {
            $doAuth = TRUE;
          }
        }
      }
      if ($doAuth) {
        $simplesaml->externalAuthenticate();
      }
    }
    return FALSE;
  }
}

/**
 * Implements hook_stanford_r25_view_calendar_alter().
 */
function stanford_earth_r25_saml_only_stanford_r25_view_calendar_alter(
  &$canView,
  Drupal\stanford_earth_r25\Entity\StanfordEarthR25Location $location
) {
  //if (!$canView) {
    $saml_view = $location->getThirdPartySetting(
      'stanford_earth_r25_saml_only',
      'allow_non_drupal_saml_users_view',
      FALSE);
    if ($saml_view) {
      $canView = stanford_earth_r25_saml_only_authenticated();
    }
  //}
}

/**
 * Implements hook_stanford_r25_book_calendar_alter().
 */
function stanford_earth_r25_saml_only_stanford_r25_book_calendar_alter(
  &$canBook,
  Drupal\stanford_earth_r25\Entity\StanfordEarthR25Location $location
) {
  if (!$canBook) {
    $saml_book = $location->getThirdPartySetting(
      'stanford_earth_r25_saml_only',
      'allow_non_drupal_saml_users_book',
      FALSE);
    if ($saml_book) {
      $canBook = stanford_earth_r25_saml_only_authenticated(true);
    }
  }
}

/**
 * Implements hook_stanford_r25_contact_alter().
 */
function stanford_earth_r25_saml_only_stanford_r25_contact_alter(
  &$contactName,
  &$contactMail
) {
  $simplesaml = \Drupal::service('simplesamlphp_auth.manager');
  if ($simplesaml->isAuthenticated()) {
    $attribs = $simplesaml->getAttributes();
    if (isset($attribs['displayName'])) {
      $name = reset($attribs['displayName']);
      if ($name !== FALSE) {
        $contactName = $name;
      }
    }
    if (isset($attribs['mail'])) {
      $mail = reset($attribs['mail']);
      if ($mail !== FALSE) {
        $contactMail = $mail;
      }
    }
  }
}

/**
 * Hook to specify if a SAML-authenticated user is allowed to login.
 *
 * @param array $attributes
 *   The SimpleSAMLphp attributes for this user.
 *
 * @return bool
 *   TRUE if SAML user is allowed to log in, FALSE if not.
 */
function stanford_earth_r25_saml_only_simplesamlphp_auth_allow_login(array $attributes) {
  if (isset($_REQUEST['destination']) &&
      substr($_REQUEST['destination'],0, 5) === '/r25/') {
    $module_handler = \Drupal::service('module_handler');
    foreach ($module_handler->getImplementations('simplesamlphp_auth_allow_login') as $module) {
      if ($module !== 'stanford_earth_r25_saml_only') {
        if ($module_handler->invoke($module, 'simplesamlphp_auth_allow_login', [$attributes]) === FALSE) {
          $redirect = $GLOBALS['base_url'];
          if (isset($_REQUEST['destination'])) {
            $redirect .= $_REQUEST['destination'];
          }
          header('Location: ' . $redirect);
          http_response_code(302);
          exit();
        }
      }
    }
  }
  return TRUE;
}

/**
 * Implements hook_module_implements_alter() to make sure our
 * hook_simplesamlphp_auth_allow_login implementation runs first.
 */
function stanford_earth_r25_saml_only_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'simplesamlphp_auth_allow_login') {
    if (array_key_exists('stanford_earth_r25_saml_only', $implementations)) {
      unset($implementations['stanford_earth_r25_saml_only']);
    }
    $implementations = ['stanford_earth_r25_saml_only' => FALSE] + $implementations;
  }
}
